<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Race-boat-app</name>
    </assembly>
    <members>
        <member name="T:Race_boat_app.Controllers.BoatController">
            <summary>
            The BoatController class handels user interaction with boat data,
            either adding, getting, or putting the data.
            </summary>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.Register">
            <summary>
            When the user makes the request to add a boat this is called.
            </summary>
            <returns>
            This function returns the regerstration page for a boat
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.ViewBoat">
            <summary>
            When the user whishes to view the boat that is assoicated with their account they
            will make a request to this function.
            </summary>
            <returns>
            It will return one of there things, if their is a boat associated with the user
            then it will return the boat page which displays the users boat information.
            If there is no boat associated with the user the boat will redirect them to the 
            register page.
            Should anything go wrong it will send the user to the Error page.
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.RegisterBoat(Race_boat_app.Models.Boat)">
            <summary>
            This function handels the registration of the boat for the user.
            </summary>
            <param name="boat">
            Boat is the boat that is object containing the information about the boat
            the user is trying to add 
            </param>
            <returns>
            Redirects the user to the boat page which will display their boats information
            Should anything go wrong it will send the user to the Error page.
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.UpdateBoat(Race_boat_app.Models.Boat)">
            <summary>
            This function handels updating the user's boat's information. 
            </summary>
            <param name="boat">
            An object containg the updated information the user wants to replace
            their current boat with
            </param>
            <returns>
            Redirects to action view boat to display the updated boat information
            Should anything go wrong it will send the user to the Error page.
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.CreateBoatAsync(Race_boat_app.Models.Boat)">
            <summary>
            Handels communicating with the API to create a boat
            </summary>
            <param name="boat">
            An object containing the information to be passed to the API
            </param>
            <returns>
            Returns the location in the API of the newly created boat 
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.GetBoatAsync(System.String)">
            <summary>
            Handels communicating with the API to get a specific Boat
            </summary>
            <param name="path">
            The location of the boat that should be retrieved
            </param>
            <returns>
            Returns the boat that was retrieved from the API
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.GetBoatsAsync(System.String)">
            <summary>
            Handels communicating with the API to retrieve all boats currently stored in the database
            </summary>
            <param name="path">
            The location of the boats that should be retrieved
            </param>
            <returns>
            Returns all the boat that was retrieved from the API
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.UpdateBoatAsync(Race_boat_app.Models.Boat)">
            <summary>
            Handels communicating with the API to update the information of 
            a specific boat
            </summary>
            <param name="boat">
            An object containing the information to be passed to the API
            </param>
            <returns>
            Will return the status code of the APIs response, should be 420 No Content  
            </returns>
        </member>
        <member name="M:Race_boat_app.Controllers.BoatController.DeleteBoatAsync(System.String)">
            <summary>
            Handels communicating with the API to delete a specific boat
            </summary>
            <param name="id">
            The ID of the boat that is to be deleted
            </param>
            <returns>
            Will return the status code of the APIs response, should be 420 No Content  
            </returns>
        </member>
    </members>
</doc>
